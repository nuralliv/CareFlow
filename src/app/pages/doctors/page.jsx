"use client";
import React, { useState } from "react";
import Header from "@/app/components/atoms/Header/Header";
import Footer from "@/app/components/atoms/Footer/Footer";
import "./doctors.css";

const doctorsData = [
   {
      id: 1,
      name: "–ñ—É–º–∞–≥—É–ª–æ–≤–∞ –ì—É–ª—å–º–∏—Ä–∞ –ê—Å–∏–∑–æ–≤–Ω–∞",
      experience: "–°—Ç–∞–∂ 30 –ª–µ—Ç",
      specialties: ["–ú–∞–º–º–æ–ª–æ–≥", "–ê–∫—É—à–µ—Ä", "–ì–∏–Ω–µ–∫–æ–ª–æ–≥"],
      reviews: 13,
      rating: 5.0,
      priceOld: "14 000 —Ç–µ–Ω–≥–µ",
      priceNew: "3 500 —Ç–µ–Ω–≥–µ",
      clinicName: "–≠–º–∏—Ä–º–µ–¥",
      clinicAddress: "–ê–ª–º–∞—Ç—ã, —É–ª. –ú–∞–Ω–∞—Å–∞, 53–∞",
      avatarUrl: "", // —Å–µ—Ä—ã–π –∫—Ä—É–≥
   },
   {
      id: 2,
      name: "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
      experience: "–°—Ç–∞–∂ 20 –ª–µ—Ç",
      specialties: ["–ö–∞—Ä–¥–∏–æ–ª–æ–≥"],
      reviews: 10,
      rating: 4.8,
      priceOld: "15 000 —Ç–µ–Ω–≥–µ",
      priceNew: "5 000 —Ç–µ–Ω–≥–µ",
      clinicName: "–ú–µ–¥–¶–µ–Ω—Ç—Ä",
      clinicAddress: "–ê–ª–º–∞—Ç—ã, —É–ª. –ê–±–∞—è, 12",
      avatarUrl: "",
   },
   {
      id: 3,
      name: "–ü–µ—Ç—Ä–æ–≤–∞ –û–ª—å–≥–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
      experience: "–°—Ç–∞–∂ 15 –ª–µ—Ç",
      specialties: ["–¢–µ—Ä–∞–ø–µ–≤—Ç"],
      reviews: 8,
      rating: 4.5,
      priceOld: "12 000 —Ç–µ–Ω–≥–µ",
      priceNew: "4 000 —Ç–µ–Ω–≥–µ",
      clinicName: "–ö–ª–∏–Ω–∏–∫–∞ –ó–¥–æ—Ä–æ–≤—å–µ",
      clinicAddress: "–ê–ª–º–∞—Ç—ã, –ø—Ä. –î–æ—Å—Ç—ã–∫, 45",
      avatarUrl: "",
   },
   {
      id: 4,
      name: "–°–∏–¥–æ—Ä–æ–≤ –ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤–∏—á",
      experience: "–°—Ç–∞–∂ 25 –ª–µ—Ç",
      specialties: ["–ù–µ–≤—Ä–æ–ª–æ–≥"],
      reviews: 20,
      rating: 5.0,
      priceOld: "18 000 —Ç–µ–Ω–≥–µ",
      priceNew: "6 000 —Ç–µ–Ω–≥–µ",
      clinicName: "–ù–µ–≤—Ä–æ–ú–µ–¥",
      clinicAddress: "–ê–ª–º–∞—Ç—ã, —É–ª. –ù–∞–∑–∞—Ä–±–∞–µ–≤–∞, 78",
      avatarUrl: "",
   },
   {
      id: 5,
      name: "–ö–æ–∑–ª–æ–≤–∞ –ú–∞—Ä–∏–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞",
      experience: "–°—Ç–∞–∂ 18 –ª–µ—Ç",
      specialties: ["–ì–∏–Ω–µ–∫–æ–ª–æ–≥"],
      reviews: 17,
      rating: 4.9,
      priceOld: "14 000 —Ç–µ–Ω–≥–µ",
      priceNew: "4 500 —Ç–µ–Ω–≥–µ",
      clinicName: "–≠–º–∏—Ä–º–µ–¥",
      clinicAddress: "–ê–ª–º–∞—Ç—ã, —É–ª. –ú–∞–Ω–∞—Å–∞, 53–∞",
      avatarUrl: "",
   },
   {
      id: 6,
      name: "–ù–∏–∫–æ–ª–∞–µ–≤ –°–µ—Ä–≥–µ–π –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á",
      experience: "–°—Ç–∞–∂ 22 –≥–æ–¥–∞",
      specialties: ["–ö–∞—Ä–¥–∏–æ–ª–æ–≥"],
      reviews: 14,
      rating: 4.7,
      priceOld: "15 000 —Ç–µ–Ω–≥–µ",
      priceNew: "5 200 —Ç–µ–Ω–≥–µ",
      clinicName: "–ú–µ–¥–¶–µ–Ω—Ç—Ä",
      clinicAddress: "–ê–ª–º–∞—Ç—ã, —É–ª. –ê–±–∞—è, 12",
      avatarUrl: "",
   },
   // –¥–æ–±–∞–≤—å —Å—Ç–æ–ª—å–∫–æ –¥–æ–∫—Ç–æ—Ä–æ–≤, —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ
];

const ITEMS_PER_PAGE = 5;

export default function DoctorsPage() {
   const [selectedDirection, setSelectedDirection] = React.useState(null);
   const [selectedSpecialist, setSelectedSpecialist] = React.useState(null);
   const [selectedSorting, setSelectedSorting] = React.useState(null);

   // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
   const [currentPage, setCurrentPage] = React.useState(1);
   const totalPages = Math.ceil(doctorsData.length / ITEMS_PER_PAGE);

   // –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Ä–∞—á–∏ (–∑–∞–≥–ª—É—à–∫–∞ - –ø–æ–∫–∞ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏)
   const filteredDoctors = doctorsData;

   const paginatedDoctors = filteredDoctors.slice(
      (currentPage - 1) * ITEMS_PER_PAGE,
      currentPage * ITEMS_PER_PAGE
   );

   return (
      <>
         <Header />
         <div className="doctors-page-container">
            <h1 className="page-title">–í—Ä–∞—á –∞–∫—É—à–µ—Ä-–≥–∏–Ω–µ–∫–æ–ª–æ–≥ –≤ –¢–∞—Ä–∞–∑–µ</h1>
            <p className="page-subtitle">
               –õ—É—á—à–∏–µ –∞–∫—É—à–µ—Ä-–≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏ –≤ –¢–∞—Ä–∞–∑–µ ‚Äì —Ü–µ–Ω—ã, –æ—Ç–∑—ã–≤—ã. –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –æ–Ω–ª–∞–π–Ω –∏
               –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è
            </p>

            <div className="filters-row">
               <FilterDropdown
                  title="–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
                  options={["–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è", "–ù–µ–≤—Ä–æ–ª–æ–≥–∏—è", "–¢–µ—Ä–∞–ø–∏—è", "–ì–∏–Ω–µ–∫–æ–ª–æ–≥–∏—è"]}
                  selected={selectedDirection}
                  setSelected={setSelectedDirection}
               />
               <FilterDropdown
                  title="–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"
                  options={["–ê–∫—É—à–µ—Ä", "–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏", "–î–æ–∫—Ç–æ—Ä"]}
                  selected={selectedSpecialist}
                  setSelected={setSelectedSpecialist}
               />
               <FilterDropdown
                  title="–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å"
                  options={["–ú–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–æ–≤", "–í—ã—Å–æ–∫–∏–µ –æ—Ü–µ–Ω–∫–∏", "–ë–æ–ª—å—à–æ–π —Å—Ç–∞–∂", "–°–Ω–∞—á–∞–ª–∞ –¥–µ—à–µ–≤–ª–µ"]}
                  selected={selectedSorting}
                  setSelected={setSelectedSorting}
               />
            </div>

            <div className="doctors-list">
               {paginatedDoctors.map((doctor) => (
                  <DoctorCard key={doctor.id} doctor={doctor} />
               ))}
            </div>

            {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
            <Pagination
               totalPages={totalPages}
               currentPage={currentPage}
               setCurrentPage={setCurrentPage}
            />
         </div>
         <Footer />
      </>
   );
}

function FilterDropdown({ title, options, selected, setSelected }) {
   const [open, setOpen] = React.useState(false);

   const toggleOpen = () => setOpen(!open);

   const onSelect = (option) => {
      setSelected(option === selected ? null : option);
      setOpen(false);
   };

   return (
      <div className="filter-dropdown">
         <button className="filter-button" onClick={toggleOpen}>
            {title} {selected ? `: ${selected}` : ""} ‚ñº
         </button>
         {open && (
            <div className="dropdown-menu">
               {options.map((option) => (
                  <div
                     key={option}
                     className={`dropdown-item ${selected === option ? "selected" : ""}`}
                     onClick={() => onSelect(option)}
                  >
                     {selected === option && "‚úì "} {option}
                  </div>
               ))}
            </div>
         )}
      </div>
   );
}

function DoctorCard({ doctor }) {
   return (
      <div className="doctor-card">
         <div className="avatar-container">
            {doctor.avatarUrl ? (
               <img src={doctor.avatarUrl} alt={doctor.name} className="avatar" />
            ) : (
               <div className="avatar-placeholder" />
            )}
         </div>

         <div className="doctor-info">
            <h2 className="doctor-name">{doctor.name}</h2>
            <div className="doctor-meta">
               <span>{doctor.experience}</span>
               <span> ‚Ä¢ </span>
               <span>{doctor.specialties.join(" ‚Ä¢ ")}</span>
            </div>
            <div className="reviews-rating">
               <span>{doctor.reviews} –æ—Ç–∑—ã–≤–æ–≤</span>
               <span>‚≠ê {doctor.rating.toFixed(1)}</span>
            </div>

            <div className="appointment-info">
               <div className="price-old">{doctor.priceOld}</div>
               <div className="price-new">{doctor.priceNew}</div>
            </div>

            <div className="clinic-info">
               <strong>{doctor.clinicName}</strong>
               <div>{doctor.clinicAddress}</div>
            </div>

            <div className="schedule">
               <div className="dates-row">
                  <div className="date-item">–≤—Ç 13</div>
                  <div className="date-item active">—Å—Ä 14</div>
                  <div className="date-item">—á—Ç 15</div>
                  <div className="date-item">–ø—Ç 16</div>
                  <div className="date-item disabled">—Å–± 17</div>
                  <div className="date-item disabled">–≤—Å 18</div>
                  <div className="date-item disabled">–ø–Ω 19</div>
               </div>
               <div className="times-row">
                  {[
                     "00:00",
                     "01:00",
                     "02:00",
                     "03:00",
                     "04:00",
                     "05:00",
                     "06:00",
                     "07:00",
                     "08:00",
                     "...",
                  ].map((time) => (
                     <button key={time} className="time-button">
                        {time}
                     </button>
                  ))}
               </div>
               <div className="call-info">–í–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω—è—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏</div>
            </div>

            <button className="sign-up-button">–ó–∞–ø–∏—Å–∞—Ç—å—Å—è üìû</button>
         </div>
      </div>
   );
}

function Pagination({ totalPages, currentPage, setCurrentPage }) {
   const pages = [];
   for (let i = 1; i <= totalPages; i++) pages.push(i);

   return (
      <div className="pagination">
         {pages.map((page) => (
            <button
               key={page}
               className={`page-btn ${page === currentPage ? "active" : ""}`}
               onClick={() => setCurrentPage(page)}
               disabled={page === currentPage}
            >
               {page}
            </button>
         ))}
      </div>
   );
}
